<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.cdd.gsl.dao.MessageInfoDomainMapper" >
  <resultMap id="BaseResultMap" type="com.cdd.gsl.domain.MessageInfoDomain" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="message" property="message" jdbcType="VARCHAR" />
    <result column="user_id" property="userId" jdbcType="BIGINT" />
    <result column="create_ts" property="createTs" jdbcType="TIMESTAMP" />
    <result column="entrust_id" property="entrustId" jdbcType="BIGINT" />
    <result column="house_id" property="houseId" jdbcType="BIGINT" />
    <result column="is_read" property="isRead" jdbcType="INTEGER" />
    <result column="update_ts" property="updateTs" jdbcType="TIMESTAMP" />
    <result column="message_type" property="messageType" jdbcType="VARCHAR" />
    <result column="obj_id" property="objId" jdbcType="BIGINT" />
    <result column="type" property="type" jdbcType="VARCHAR" />
    <result column="send_user_id" property="sendUserId" jdbcType="BIGINT" />
    <result column="receive_user_id" property="receiveUserId" jdbcType="BIGINT" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, message, user_id, create_ts, entrust_id, house_id, is_read, update_ts, message_type, 
    obj_id, type, send_user_id, receive_user_id
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.cdd.gsl.domain.MessageInfoDomainExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_message_info
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from t_message_info
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from t_message_info
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.cdd.gsl.domain.MessageInfoDomainExample" >
    delete from t_message_info
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.cdd.gsl.domain.MessageInfoDomain" >
    insert into t_message_info (id, message, user_id, 
      create_ts, entrust_id, house_id, 
      is_read, update_ts, message_type, 
      obj_id, type, send_user_id, 
      receive_user_id)
    values (#{id,jdbcType=BIGINT}, #{message,jdbcType=VARCHAR}, #{userId,jdbcType=BIGINT}, 
      #{createTs,jdbcType=TIMESTAMP}, #{entrustId,jdbcType=BIGINT}, #{houseId,jdbcType=BIGINT}, 
      #{isRead,jdbcType=INTEGER}, #{updateTs,jdbcType=TIMESTAMP}, #{messageType,jdbcType=VARCHAR}, 
      #{objId,jdbcType=BIGINT}, #{type,jdbcType=VARCHAR}, #{sendUserId,jdbcType=BIGINT}, 
      #{receiveUserId,jdbcType=BIGINT})
  </insert>
  <insert id="insertSelective" parameterType="com.cdd.gsl.domain.MessageInfoDomain" >
    insert into t_message_info
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="message != null" >
        message,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="createTs != null" >
        create_ts,
      </if>
      <if test="entrustId != null" >
        entrust_id,
      </if>
      <if test="houseId != null" >
        house_id,
      </if>
      <if test="isRead != null" >
        is_read,
      </if>
      <if test="updateTs != null" >
        update_ts,
      </if>
      <if test="messageType != null" >
        message_type,
      </if>
      <if test="objId != null" >
        obj_id,
      </if>
      <if test="type != null" >
        type,
      </if>
      <if test="sendUserId != null" >
        send_user_id,
      </if>
      <if test="receiveUserId != null" >
        receive_user_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="message != null" >
        #{message,jdbcType=VARCHAR},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="createTs != null" >
        #{createTs,jdbcType=TIMESTAMP},
      </if>
      <if test="entrustId != null" >
        #{entrustId,jdbcType=BIGINT},
      </if>
      <if test="houseId != null" >
        #{houseId,jdbcType=BIGINT},
      </if>
      <if test="isRead != null" >
        #{isRead,jdbcType=INTEGER},
      </if>
      <if test="updateTs != null" >
        #{updateTs,jdbcType=TIMESTAMP},
      </if>
      <if test="messageType != null" >
        #{messageType,jdbcType=VARCHAR},
      </if>
      <if test="objId != null" >
        #{objId,jdbcType=BIGINT},
      </if>
      <if test="type != null" >
        #{type,jdbcType=VARCHAR},
      </if>
      <if test="sendUserId != null" >
        #{sendUserId,jdbcType=BIGINT},
      </if>
      <if test="receiveUserId != null" >
        #{receiveUserId,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.cdd.gsl.domain.MessageInfoDomainExample" resultType="java.lang.Integer" >
    select count(*) from t_message_info
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update t_message_info
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.message != null" >
        message = #{record.message,jdbcType=VARCHAR},
      </if>
      <if test="record.userId != null" >
        user_id = #{record.userId,jdbcType=BIGINT},
      </if>
      <if test="record.createTs != null" >
        create_ts = #{record.createTs,jdbcType=TIMESTAMP},
      </if>
      <if test="record.entrustId != null" >
        entrust_id = #{record.entrustId,jdbcType=BIGINT},
      </if>
      <if test="record.houseId != null" >
        house_id = #{record.houseId,jdbcType=BIGINT},
      </if>
      <if test="record.isRead != null" >
        is_read = #{record.isRead,jdbcType=INTEGER},
      </if>
      <if test="record.updateTs != null" >
        update_ts = #{record.updateTs,jdbcType=TIMESTAMP},
      </if>
      <if test="record.messageType != null" >
        message_type = #{record.messageType,jdbcType=VARCHAR},
      </if>
      <if test="record.objId != null" >
        obj_id = #{record.objId,jdbcType=BIGINT},
      </if>
      <if test="record.type != null" >
        type = #{record.type,jdbcType=VARCHAR},
      </if>
      <if test="record.sendUserId != null" >
        send_user_id = #{record.sendUserId,jdbcType=BIGINT},
      </if>
      <if test="record.receiveUserId != null" >
        receive_user_id = #{record.receiveUserId,jdbcType=BIGINT},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update t_message_info
    set id = #{record.id,jdbcType=BIGINT},
      message = #{record.message,jdbcType=VARCHAR},
      user_id = #{record.userId,jdbcType=BIGINT},
      create_ts = #{record.createTs,jdbcType=TIMESTAMP},
      entrust_id = #{record.entrustId,jdbcType=BIGINT},
      house_id = #{record.houseId,jdbcType=BIGINT},
      is_read = #{record.isRead,jdbcType=INTEGER},
      update_ts = #{record.updateTs,jdbcType=TIMESTAMP},
      message_type = #{record.messageType,jdbcType=VARCHAR},
      obj_id = #{record.objId,jdbcType=BIGINT},
      type = #{record.type,jdbcType=VARCHAR},
      send_user_id = #{record.sendUserId,jdbcType=BIGINT},
      receive_user_id = #{record.receiveUserId,jdbcType=BIGINT}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.cdd.gsl.domain.MessageInfoDomain" >
    update t_message_info
    <set >
      <if test="message != null" >
        message = #{message,jdbcType=VARCHAR},
      </if>
      <if test="userId != null" >
        user_id = #{userId,jdbcType=BIGINT},
      </if>
      <if test="createTs != null" >
        create_ts = #{createTs,jdbcType=TIMESTAMP},
      </if>
      <if test="entrustId != null" >
        entrust_id = #{entrustId,jdbcType=BIGINT},
      </if>
      <if test="houseId != null" >
        house_id = #{houseId,jdbcType=BIGINT},
      </if>
      <if test="isRead != null" >
        is_read = #{isRead,jdbcType=INTEGER},
      </if>
      <if test="updateTs != null" >
        update_ts = #{updateTs,jdbcType=TIMESTAMP},
      </if>
      <if test="messageType != null" >
        message_type = #{messageType,jdbcType=VARCHAR},
      </if>
      <if test="objId != null" >
        obj_id = #{objId,jdbcType=BIGINT},
      </if>
      <if test="type != null" >
        type = #{type,jdbcType=VARCHAR},
      </if>
      <if test="sendUserId != null" >
        send_user_id = #{sendUserId,jdbcType=BIGINT},
      </if>
      <if test="receiveUserId != null" >
        receive_user_id = #{receiveUserId,jdbcType=BIGINT},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.cdd.gsl.domain.MessageInfoDomain" >
    update t_message_info
    set message = #{message,jdbcType=VARCHAR},
      user_id = #{userId,jdbcType=BIGINT},
      create_ts = #{createTs,jdbcType=TIMESTAMP},
      entrust_id = #{entrustId,jdbcType=BIGINT},
      house_id = #{houseId,jdbcType=BIGINT},
      is_read = #{isRead,jdbcType=INTEGER},
      update_ts = #{updateTs,jdbcType=TIMESTAMP},
      message_type = #{messageType,jdbcType=VARCHAR},
      obj_id = #{objId,jdbcType=BIGINT},
      type = #{type,jdbcType=VARCHAR},
      send_user_id = #{sendUserId,jdbcType=BIGINT},
      receive_user_id = #{receiveUserId,jdbcType=BIGINT}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>