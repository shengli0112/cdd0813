<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.cdd.gsl.dao.LeaseParkInfoDomainMapper" >
  <resultMap id="BaseResultMap" type="com.cdd.gsl.domain.LeaseParkInfoDomain" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="city" property="city" jdbcType="VARCHAR" />
    <result column="county" property="county" jdbcType="VARCHAR" />
    <result column="address" property="address" jdbcType="VARCHAR" />
    <result column="park_name" property="parkName" jdbcType="VARCHAR" />
    <result column="total_area" property="totalArea" jdbcType="INTEGER" />
    <result column="unit_price" property="unitPrice" jdbcType="DECIMAL" />
    <result column="industry" property="industry" jdbcType="VARCHAR" />
    <result column="contacts" property="contacts" jdbcType="VARCHAR" />
    <result column="phone" property="phone" jdbcType="VARCHAR" />
    <result column="tag" property="tag" jdbcType="VARCHAR" />
    <result column="status" property="status" jdbcType="INTEGER" />
    <result column="create_ts" property="createTs" jdbcType="TIMESTAMP" />
    <result column="update_ts" property="updateTs" jdbcType="TIMESTAMP" />
    <result column="user_id" property="userId" jdbcType="BIGINT" />
    <result column="town" property="town" jdbcType="VARCHAR" />
    <result column="background" property="background" jdbcType="VARCHAR" />
    <result column="price_type" property="priceType" jdbcType="INTEGER" />
    <result column="top" property="top" jdbcType="INTEGER" />
    <result column="park_type" property="parkType" jdbcType="VARCHAR" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.cdd.gsl.domain.LeaseParkInfoDomain" extends="BaseResultMap" >
    <result column="description" property="description" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, city, county, address, park_name, total_area, unit_price, industry, contacts, 
    phone, tag, status, create_ts, update_ts, user_id, town, background, price_type, 
    top, park_type
  </sql>
  <sql id="Blob_Column_List" >
    description
  </sql>
  <select id="selectByExampleWithBLOBs" resultMap="ResultMapWithBLOBs" parameterType="com.cdd.gsl.domain.LeaseParkInfoDomainExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from t_lease_park_info
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.cdd.gsl.domain.LeaseParkInfoDomainExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_lease_park_info
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from t_lease_park_info
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from t_lease_park_info
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.cdd.gsl.domain.LeaseParkInfoDomainExample" >
    delete from t_lease_park_info
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.cdd.gsl.domain.LeaseParkInfoDomain" >
    insert into t_lease_park_info (id, city, county, 
      address, park_name, total_area, 
      unit_price, industry, contacts, 
      phone, tag, status, 
      create_ts, update_ts, user_id, 
      town, background, price_type, 
      top, park_type, description
      )
    values (#{id,jdbcType=BIGINT}, #{city,jdbcType=VARCHAR}, #{county,jdbcType=VARCHAR}, 
      #{address,jdbcType=VARCHAR}, #{parkName,jdbcType=VARCHAR}, #{totalArea,jdbcType=INTEGER}, 
      #{unitPrice,jdbcType=DECIMAL}, #{industry,jdbcType=VARCHAR}, #{contacts,jdbcType=VARCHAR}, 
      #{phone,jdbcType=VARCHAR}, #{tag,jdbcType=VARCHAR}, #{status,jdbcType=INTEGER}, 
      #{createTs,jdbcType=TIMESTAMP}, #{updateTs,jdbcType=TIMESTAMP}, #{userId,jdbcType=BIGINT}, 
      #{town,jdbcType=VARCHAR}, #{background,jdbcType=VARCHAR}, #{priceType,jdbcType=INTEGER}, 
      #{top,jdbcType=INTEGER}, #{parkType,jdbcType=VARCHAR}, #{description,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.cdd.gsl.domain.LeaseParkInfoDomain" >
    insert into t_lease_park_info
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="city != null" >
        city,
      </if>
      <if test="county != null" >
        county,
      </if>
      <if test="address != null" >
        address,
      </if>
      <if test="parkName != null" >
        park_name,
      </if>
      <if test="totalArea != null" >
        total_area,
      </if>
      <if test="unitPrice != null" >
        unit_price,
      </if>
      <if test="industry != null" >
        industry,
      </if>
      <if test="contacts != null" >
        contacts,
      </if>
      <if test="phone != null" >
        phone,
      </if>
      <if test="tag != null" >
        tag,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="createTs != null" >
        create_ts,
      </if>
      <if test="updateTs != null" >
        update_ts,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="town != null" >
        town,
      </if>
      <if test="background != null" >
        background,
      </if>
      <if test="priceType != null" >
        price_type,
      </if>
      <if test="top != null" >
        top,
      </if>
      <if test="parkType != null" >
        park_type,
      </if>
      <if test="description != null" >
        description,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="city != null" >
        #{city,jdbcType=VARCHAR},
      </if>
      <if test="county != null" >
        #{county,jdbcType=VARCHAR},
      </if>
      <if test="address != null" >
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="parkName != null" >
        #{parkName,jdbcType=VARCHAR},
      </if>
      <if test="totalArea != null" >
        #{totalArea,jdbcType=INTEGER},
      </if>
      <if test="unitPrice != null" >
        #{unitPrice,jdbcType=DECIMAL},
      </if>
      <if test="industry != null" >
        #{industry,jdbcType=VARCHAR},
      </if>
      <if test="contacts != null" >
        #{contacts,jdbcType=VARCHAR},
      </if>
      <if test="phone != null" >
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="tag != null" >
        #{tag,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        #{status,jdbcType=INTEGER},
      </if>
      <if test="createTs != null" >
        #{createTs,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTs != null" >
        #{updateTs,jdbcType=TIMESTAMP},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="town != null" >
        #{town,jdbcType=VARCHAR},
      </if>
      <if test="background != null" >
        #{background,jdbcType=VARCHAR},
      </if>
      <if test="priceType != null" >
        #{priceType,jdbcType=INTEGER},
      </if>
      <if test="top != null" >
        #{top,jdbcType=INTEGER},
      </if>
      <if test="parkType != null" >
        #{parkType,jdbcType=VARCHAR},
      </if>
      <if test="description != null" >
        #{description,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.cdd.gsl.domain.LeaseParkInfoDomainExample" resultType="java.lang.Integer" >
    select count(*) from t_lease_park_info
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update t_lease_park_info
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.city != null" >
        city = #{record.city,jdbcType=VARCHAR},
      </if>
      <if test="record.county != null" >
        county = #{record.county,jdbcType=VARCHAR},
      </if>
      <if test="record.address != null" >
        address = #{record.address,jdbcType=VARCHAR},
      </if>
      <if test="record.parkName != null" >
        park_name = #{record.parkName,jdbcType=VARCHAR},
      </if>
      <if test="record.totalArea != null" >
        total_area = #{record.totalArea,jdbcType=INTEGER},
      </if>
      <if test="record.unitPrice != null" >
        unit_price = #{record.unitPrice,jdbcType=DECIMAL},
      </if>
      <if test="record.industry != null" >
        industry = #{record.industry,jdbcType=VARCHAR},
      </if>
      <if test="record.contacts != null" >
        contacts = #{record.contacts,jdbcType=VARCHAR},
      </if>
      <if test="record.phone != null" >
        phone = #{record.phone,jdbcType=VARCHAR},
      </if>
      <if test="record.tag != null" >
        tag = #{record.tag,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null" >
        status = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.createTs != null" >
        create_ts = #{record.createTs,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTs != null" >
        update_ts = #{record.updateTs,jdbcType=TIMESTAMP},
      </if>
      <if test="record.userId != null" >
        user_id = #{record.userId,jdbcType=BIGINT},
      </if>
      <if test="record.town != null" >
        town = #{record.town,jdbcType=VARCHAR},
      </if>
      <if test="record.background != null" >
        background = #{record.background,jdbcType=VARCHAR},
      </if>
      <if test="record.priceType != null" >
        price_type = #{record.priceType,jdbcType=INTEGER},
      </if>
      <if test="record.top != null" >
        top = #{record.top,jdbcType=INTEGER},
      </if>
      <if test="record.parkType != null" >
        park_type = #{record.parkType,jdbcType=VARCHAR},
      </if>
      <if test="record.description != null" >
        description = #{record.description,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map" >
    update t_lease_park_info
    set id = #{record.id,jdbcType=BIGINT},
      city = #{record.city,jdbcType=VARCHAR},
      county = #{record.county,jdbcType=VARCHAR},
      address = #{record.address,jdbcType=VARCHAR},
      park_name = #{record.parkName,jdbcType=VARCHAR},
      total_area = #{record.totalArea,jdbcType=INTEGER},
      unit_price = #{record.unitPrice,jdbcType=DECIMAL},
      industry = #{record.industry,jdbcType=VARCHAR},
      contacts = #{record.contacts,jdbcType=VARCHAR},
      phone = #{record.phone,jdbcType=VARCHAR},
      tag = #{record.tag,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=INTEGER},
      create_ts = #{record.createTs,jdbcType=TIMESTAMP},
      update_ts = #{record.updateTs,jdbcType=TIMESTAMP},
      user_id = #{record.userId,jdbcType=BIGINT},
      town = #{record.town,jdbcType=VARCHAR},
      background = #{record.background,jdbcType=VARCHAR},
      price_type = #{record.priceType,jdbcType=INTEGER},
      top = #{record.top,jdbcType=INTEGER},
      park_type = #{record.parkType,jdbcType=VARCHAR},
      description = #{record.description,jdbcType=LONGVARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update t_lease_park_info
    set id = #{record.id,jdbcType=BIGINT},
      city = #{record.city,jdbcType=VARCHAR},
      county = #{record.county,jdbcType=VARCHAR},
      address = #{record.address,jdbcType=VARCHAR},
      park_name = #{record.parkName,jdbcType=VARCHAR},
      total_area = #{record.totalArea,jdbcType=INTEGER},
      unit_price = #{record.unitPrice,jdbcType=DECIMAL},
      industry = #{record.industry,jdbcType=VARCHAR},
      contacts = #{record.contacts,jdbcType=VARCHAR},
      phone = #{record.phone,jdbcType=VARCHAR},
      tag = #{record.tag,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=INTEGER},
      create_ts = #{record.createTs,jdbcType=TIMESTAMP},
      update_ts = #{record.updateTs,jdbcType=TIMESTAMP},
      user_id = #{record.userId,jdbcType=BIGINT},
      town = #{record.town,jdbcType=VARCHAR},
      background = #{record.background,jdbcType=VARCHAR},
      price_type = #{record.priceType,jdbcType=INTEGER},
      top = #{record.top,jdbcType=INTEGER},
      park_type = #{record.parkType,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.cdd.gsl.domain.LeaseParkInfoDomain" >
    update t_lease_park_info
    <set >
      <if test="city != null" >
        city = #{city,jdbcType=VARCHAR},
      </if>
      <if test="county != null" >
        county = #{county,jdbcType=VARCHAR},
      </if>
      <if test="address != null" >
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="parkName != null" >
        park_name = #{parkName,jdbcType=VARCHAR},
      </if>
      <if test="totalArea != null" >
        total_area = #{totalArea,jdbcType=INTEGER},
      </if>
      <if test="unitPrice != null" >
        unit_price = #{unitPrice,jdbcType=DECIMAL},
      </if>
      <if test="industry != null" >
        industry = #{industry,jdbcType=VARCHAR},
      </if>
      <if test="contacts != null" >
        contacts = #{contacts,jdbcType=VARCHAR},
      </if>
      <if test="phone != null" >
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="tag != null" >
        tag = #{tag,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="createTs != null" >
        create_ts = #{createTs,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTs != null" >
        update_ts = #{updateTs,jdbcType=TIMESTAMP},
      </if>
      <if test="userId != null" >
        user_id = #{userId,jdbcType=BIGINT},
      </if>
      <if test="town != null" >
        town = #{town,jdbcType=VARCHAR},
      </if>
      <if test="background != null" >
        background = #{background,jdbcType=VARCHAR},
      </if>
      <if test="priceType != null" >
        price_type = #{priceType,jdbcType=INTEGER},
      </if>
      <if test="top != null" >
        top = #{top,jdbcType=INTEGER},
      </if>
      <if test="parkType != null" >
        park_type = #{parkType,jdbcType=VARCHAR},
      </if>
      <if test="description != null" >
        description = #{description,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.cdd.gsl.domain.LeaseParkInfoDomain" >
    update t_lease_park_info
    set city = #{city,jdbcType=VARCHAR},
      county = #{county,jdbcType=VARCHAR},
      address = #{address,jdbcType=VARCHAR},
      park_name = #{parkName,jdbcType=VARCHAR},
      total_area = #{totalArea,jdbcType=INTEGER},
      unit_price = #{unitPrice,jdbcType=DECIMAL},
      industry = #{industry,jdbcType=VARCHAR},
      contacts = #{contacts,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR},
      tag = #{tag,jdbcType=VARCHAR},
      status = #{status,jdbcType=INTEGER},
      create_ts = #{createTs,jdbcType=TIMESTAMP},
      update_ts = #{updateTs,jdbcType=TIMESTAMP},
      user_id = #{userId,jdbcType=BIGINT},
      town = #{town,jdbcType=VARCHAR},
      background = #{background,jdbcType=VARCHAR},
      price_type = #{priceType,jdbcType=INTEGER},
      top = #{top,jdbcType=INTEGER},
      park_type = #{parkType,jdbcType=VARCHAR},
      description = #{description,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.cdd.gsl.domain.LeaseParkInfoDomain" >
    update t_lease_park_info
    set city = #{city,jdbcType=VARCHAR},
      county = #{county,jdbcType=VARCHAR},
      address = #{address,jdbcType=VARCHAR},
      park_name = #{parkName,jdbcType=VARCHAR},
      total_area = #{totalArea,jdbcType=INTEGER},
      unit_price = #{unitPrice,jdbcType=DECIMAL},
      industry = #{industry,jdbcType=VARCHAR},
      contacts = #{contacts,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR},
      tag = #{tag,jdbcType=VARCHAR},
      status = #{status,jdbcType=INTEGER},
      create_ts = #{createTs,jdbcType=TIMESTAMP},
      update_ts = #{updateTs,jdbcType=TIMESTAMP},
      user_id = #{userId,jdbcType=BIGINT},
      town = #{town,jdbcType=VARCHAR},
      background = #{background,jdbcType=VARCHAR},
      price_type = #{priceType,jdbcType=INTEGER},
      top = #{top,jdbcType=INTEGER},
      park_type = #{parkType,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>