<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
	http://www.springframework.org/schema/tx
	http://www.springframework.org/schema/tx/spring-tx-3.0.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

    <description>数据源配置</description>
    <context:property-placeholder location="classpath:*.properties"/>

    <!-- cdd database-->
    <bean name="masterDataSource" class="com.alibaba.druid.pool.DruidDataSource"
          init-method="init" destroy-method="close">
        <property name="driverClassName" value="${master.db.driver}"/>
        <property name="url" value="${master.db.dbUrl}"/>
        <property name="username" value="${master.db.userName}"/>
        <property name="password" value="${master.db.passWord}"/>

        <!-- 初始化大小、最小、最大 -->
        <property name="initialSize" value="${master.db.initialSize}"/>
        <property name="minIdle" value="${master.db.minPoolSize}"/>
        <property name="maxActive" value="${master.db.maxPoolSize}"/>

        <!-- 获取连接等待超时时间 -->
        <property name="maxWait" value="60000"/>

        <!-- 检测需要关闭的空闲连接，单位是毫秒 -->
        <property name="timeBetweenEvictionRunsMillis" value="60000"/>

        <!-- 一个连接在池中最小生存的时间，单位是毫秒 -->
        <property name="minEvictableIdleTimeMillis" value="300000"/>

        <!-- 监控统计拦截filters -->
        <property name="proxyFilters">
            <list>
                <ref bean="stat-filter"/>
                <ref bean="slf4j-filter"/>
            </list>
        </property>
    </bean>


    <bean name="slaveDataSource" class="com.alibaba.druid.pool.DruidDataSource"
          init-method="init" destroy-method="close">
        <property name="driverClassName" value="${slave.db.driver}"/>
        <property name="url" value="${slave.db.dbUrl}"/>
        <property name="username" value="${slave.db.userName}"/>
        <property name="password" value="${slave.db.passWord}"/>

        <!-- 初始化大小、最小、最大 -->
        <property name="initialSize" value="${slave.db.initialSize}"/>
        <property name="minIdle" value="${slave.db.minPoolSize}"/>
        <property name="maxActive" value="${slave.db.maxPoolSize}"/>

        <!-- 获取连接等待超时时间 -->
        <property name="maxWait" value="60000"/>

        <!-- 检测需要关闭的空闲连接，单位是毫秒 -->
        <property name="timeBetweenEvictionRunsMillis" value="60000"/>

        <!-- 一个连接在池中最小生存的时间，单位是毫秒 -->
        <property name="minEvictableIdleTimeMillis" value="300000"/>

        <!-- 监控统计拦截filters -->
        <property name="proxyFilters">
            <list>
                <ref bean="stat-filter"/>
                <ref bean="slf4j-filter"/>
            </list>
        </property>
    </bean>
    <bean name="slave2DataSource" class="com.alibaba.druid.pool.DruidDataSource"
          init-method="init" destroy-method="close">
        <property name="driverClassName" value="${slave2.db.driver}"/>
        <property name="url" value="${slave2.db.dbUrl}"/>
        <property name="username" value="${slave2.db.userName}"/>
        <property name="password" value="${slave2.db.passWord}"/>

        <!-- 初始化大小、最小、最大 -->
        <property name="initialSize" value="${slave2.db.initialSize}"/>
        <property name="minIdle" value="${slave2.db.minPoolSize}"/>
        <property name="maxActive" value="${slave2.db.maxPoolSize}"/>

        <!-- 获取连接等待超时时间 -->
        <property name="maxWait" value="60000"/>

        <!-- 检测需要关闭的空闲连接，单位是毫秒 -->
        <property name="timeBetweenEvictionRunsMillis" value="60000"/>

        <!-- 一个连接在池中最小生存的时间，单位是毫秒 -->
        <property name="minEvictableIdleTimeMillis" value="300000"/>

        <!-- 监控统计拦截filters -->
        <property name="proxyFilters">
            <list>
                <ref bean="stat-filter"/>
                <ref bean="slf4j-filter"/>
            </list>
        </property>
    </bean>
    <bean id="dataSource" class="com.cdd.gsl.datasource.DynamicDataSource">
        <property name="targetDataSources">
            <map key-type="java.lang.String">
                <!-- write -->
                <entry key="master" value-ref="masterDataSource"/>
                <!-- read -->
                <entry key="slave" value-ref="slaveDataSource"/>
                <!-- read -->
                <entry key="slave2" value-ref="slave2DataSource"/>
            </map>

        </property>
        <property name="defaultTargetDataSource" ref="masterDataSource"/>
    </bean>

    <!--连接池filter -->
    <bean id="stat-filter" class="com.alibaba.druid.filter.stat.StatFilter">
        <property name="slowSqlMillis" value="5000"/>
        <property name="logSlowSql" value="true"/>
        <property name="mergeSql" value="true"/>
    </bean>
    <bean id="slf4j-filter" class="com.alibaba.druid.filter.logging.Slf4jLogFilter"/>

    <bean id="transactionManager"
          class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>




    <tx:annotation-driven order="50"/>

    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <property name="configLocation" value="classpath:spring/mybatis.xml"/>
        <property name="mapperLocations" value="classpath*:mappers/*.xml"/>
    </bean>

    <bean name="mapperScannerConfigurer" class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.cdd.gsl.dao"/>
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
    </bean>



</beans>